"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[6766],{94721:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"education/computer-science/data-structures/definition","title":"Definition","description":"Definition of Data Structures","source":"@site/docs/education/01-computer-science/09-data-structures/01-definition.mdx","sourceDirName":"education/01-computer-science/09-data-structures","slug":"/education/computer-science/data-structures/definition","permalink":"/tech-labs/docs/education/computer-science/data-structures/definition","draft":false,"unlisted":false,"editUrl":"https://github.com/EliFuzz/tech-labs/docs/education/01-computer-science/09-data-structures/01-definition.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Definition","description":"Definition of Data Structures","hide_table_of_contents":true},"sidebar":"education","previous":{"title":"Data Structures","permalink":"/tech-labs/docs/category/data-structures"},"next":{"title":"Basic","permalink":"/tech-labs/docs/category/basic"}}');var r=s(86070),n=s(15658);const a={title:"Definition",description:"Definition of Data Structures",hide_table_of_contents:!0},c=void 0,d={},l=[{value:"Linear vs Non-Linear Data Structures",id:"linear-vs-non-linear-data-structures",level:2}];function o(e){const t={h2:"h2",img:"img",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:s(10873).A+""})}),"\n",(0,r.jsx)(t.h2,{id:"linear-vs-non-linear-data-structures",children:"Linear vs Non-Linear Data Structures"}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Aspect"}),(0,r.jsx)("th",{children:"Linear Data Structures"}),(0,r.jsx)("th",{children:"Non Linear Data Structures"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Arrangement of Data"}),(0,r.jsx)("td",{children:"Data items are arranged in sequential order, one after the other"}),(0,r.jsx)("td",{children:"Data items are arranged in non-sequential order (hierarchical manner)"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Layer Presence"}),(0,r.jsx)("td",{children:"All items are present on a single layer"}),(0,r.jsx)("td",{children:"Data items are present at different layers"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Traversability"}),(0,r.jsx)("td",{children:"Can be traversed in a single run. That is, if we start from the first element, we can traverse all elements sequentially in a single pass"}),(0,r.jsx)("td",{children:"Requires multiple runs. That is, if we start from the first element, it might not be possible to traverse all elements in a single pass"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Memory Utilization"}),(0,r.jsx)("td",{children:"Is not efficient"}),(0,r.jsx)("td",{children:"Different structures utilize memory in different efficient ways depending on the need"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Time Complexity"}),(0,r.jsx)("td",{children:"Increases with data size"}),(0,r.jsx)("td",{children:"Remains the same"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Examples"}),(0,r.jsx)("td",{children:"Arrays, Stack, Queue"}),(0,r.jsx)("td",{children:"Tree, Graph, Map"})]})]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},10873:(e,t,s)=>{s.d(t,{A:()=>i});const i=s.p+"assets/images/datastructures-1bc7fc60368047f33e10c3f5cf2c11ac.svg"}}]);