"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[9969],{4639:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"roadmap/database/database","title":"Database","description":"Database Developer / Engineer Roadmap","source":"@site/docs/roadmap/08-database/02-database.mdx","sourceDirName":"roadmap/08-database","slug":"/roadmap/database/database","permalink":"/tech-labs/docs/roadmap/database/database","draft":false,"unlisted":false,"editUrl":"https://github.com/EliFuzz/tech-labs/docs/roadmap/08-database/02-database.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Database","description":"Database Developer / Engineer Roadmap","hide_table_of_contents":true},"sidebar":"roadmap","previous":{"title":"Overview","permalink":"/tech-labs/docs/roadmap/database/overview"},"next":{"title":"Architect","permalink":"/tech-labs/docs/category/architect"}}');var n=a(23420),r=a(38906);const l={title:"Database",description:"Database Developer / Engineer Roadmap",hide_table_of_contents:!0},s=void 0,o={},c=[];function u(e){const t={mermaid:"mermaid",...(0,r.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:'graph TB\n\n  Prerequisites --\x3e DatabaseDeveloper(Database Developer / Engineer)\n\n  DatabaseDeveloper --\x3e RDBMSConcept(RDBMS Concepts)\n  RDBMSConcept ~~~|<ul style="text-align:left"><li>Object Model: Queries, Data Types, Rows, Columns, Tables, Schemas, Databases</li><li>Relational Model: Domains, Attributes, Tuples, Relations, Constraints, NULL</li><li>High Level Database Concepts: ACID, MVCC, Transactions, Write-ahead Log, Query Processing</li></ul>| RDBMSConcept\n\n  RDBMSConcept --\x3e SQLConcepts(SQL Concepts)\n  SQLConcepts ~~~|<ul style="text-align:left"><li>DDL Queries: for schemas/tables/types</li><li>DML Queries: querying, filtering, modifying data, joining tables</li><li>Transactions, CTE, Subqueries, Lateral Join, Grouping, Set Operations</li></ul>| SQLConcepts\n\n  SQLConcepts --\x3e Configuration(Configuration)\n  Configuration ~~~|<ul style="text-align:left"><li>Reporting Logging and Statistics</li><li>Resources Usage</li><li>Write-ahead Log</li><li>Vacuums</li><li>Replication</li><li>Query Planner</li><li>Checkpoints Background Writer</li></ul><br/>| Configuration\n\n  Configuration --\x3e SecurityConcepts(Security Concepts)\n  SecurityConcepts ~~~|<ul style="text-align:left"><li>Default Privileges</li><li>Grant / Revoke</li><li>Object Privileges</li><li>Authentication Models</li><li>Roles</li><li>SSL Settings</li><li>Row-Level Security</li></ul><br/>| SecurityConcepts\n\n  SecurityConcepts --\x3e Infrastructure(Infrastructure)\n  Infrastructure ~~~|<ul style="text-align:left"><li>Resource Usage and Provisioning, Capacity Planning</li><li>Upgrade Procedures</li><li>Backup / Recovery Tools</li><li>Cluster Management</li><li>Kubernetes Deployment</li><li>Load Balancing & SERvice Discovery</li><li>Monitoring</li><li>Anonymization</li></ul><br/>| Infrastructure\n\n  Infrastructure --\x3e Automation(Automation)\n  Automation ~~~|<ul style="text-align:left"><li>Shell or any Programming Language scripts</li><li>Configuration Management: Terraform, Ansible, Salt, Chef, Puppet</li></ul>| Automation\n\n  Automation --\x3e Development(Development)\n  Development ~~~|<ul style="text-align:left"><li>Migration</li><li>Bulk Loading and Processing Data</li><li>Data Partitioning</li><li>Sharding Patterns</li><li>Data Normalization / Normal Forms</li><li>Queues</li><li>Low Level Internals: Processes and Memory Architecture, Buffer Management, Lock Management, Physical Storage and File Layout, System Catalog</li><li>Fine Grained Tuning: Per-User/Database Settings, Storage Parameters</li><li>Workload Dependent tuning: ETL, OLTP, OLAP, HTAP</li><li>Procedures and Functions, Triggers, Recursive CTE, Aggregate and Window Functions</li></ul><br/>| Development\n\n  Development --\x3e TroubleshootingTechniques(Troubleshooting Techniques)\n\n  TroubleshootingTechniques --\x3e SQLOptimizationTechniques(SQL Optimization Techniques)\n  SQLOptimizationTechniques ~~~|<ul style="text-align:left"><li>Schema Design Patterns: Normalization, Type Optimization, Indexing, Partitioning, Views and Materialized Views</li><li>Query Patterns</li><li>Indexes: B-Tree, Hash, GIST, SP-GIST, GIN, BRIN</li></ul>| SQLOptimizationTechniques\n\n  SQLOptimizationTechniques --\x3e NextSteps\n\n  subgraph Prerequisites\n    direction TB\n\n    ComputerScience(<a href="/tech-labs/docs/category/computer-science" target="_blank" rel="noopener noreferrer">Computer Science</a>)\n    Mathematics(<a href="/tech-labs/docs/roadmap/computer-science" target="_blank" rel="noopener noreferrer">Mathematics</a>)\n    Statistics(<a href="/tech-labs/docs/education/computer-science/statistics/basics/" target="_blank" rel="noopener noreferrer">Statistics</a>)\n  end\n\n  subgraph NextSteps [Next Steps]\n      direction TB\n\n      TeamLead(<a href="/tech-labs/docs/roadmap/management" target="_blank" rel="noopener noreferrer">Team Lead</a>)\n      EngineeringManager(<a href="/tech-labs/docs/roadmap/management" target="_blank" rel="noopener noreferrer">Engineering Manager</a>)\n      Architect(<a href="/tech-labs/docs/roadmap/software-architect" target="_blank" rel="noopener noreferrer">Architect</a>)\n  end'})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);