"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[8035],{83614:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>h,contentTitle:()=>c,default:()=>j,frontMatter:()=>d,metadata:()=>a,toc:()=>o});var n=i(11527),t=i(84135),r=i(40521),l=i(74109);const d={title:"Cache",description:"Cache Overview",hide_table_of_contents:!0},c=void 0,a={id:"education/software-development/cache",title:"Cache",description:"Cache Overview",source:"@site/docs/education/03-software-development/09-cache.mdx",sourceDirName:"education/03-software-development",slug:"/education/software-development/cache",permalink:"/tech-labs/docs/education/software-development/cache",draft:!1,unlisted:!1,editUrl:"https://github.com/EliFuzz/tech-labs/docs/education/03-software-development/09-cache.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Cache",description:"Cache Overview",hide_table_of_contents:!0},sidebar:"education",previous:{title:"Database",permalink:"/tech-labs/docs/education/software-development/database"},next:{title:"Licenses",permalink:"/tech-labs/docs/education/software-development/license"}},h={},o=[{value:"Core Concepts",id:"core-concepts",level:3},{value:"Benefits",id:"benefits",level:3},{value:"Keys",id:"keys",level:3},{value:"Values",id:"values",level:3},{value:"Levels",id:"levels",level:3},{value:"Security",id:"security",level:2}];function x(e){const s={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.Z,{queryString:"primary",children:[(0,n.jsxs)(l.Z,{value:"overview",label:"Overview",children:[(0,n.jsx)(s.p,{children:"Temporary data store, typically in RAM, that holds frequently accessed data for faster retrieval."}),(0,n.jsx)(s.h3,{id:"core-concepts",children:"Core Concepts"}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Cache Operations","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Cache Lookup"}),": Application checks the cache for requested data"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Cache Hit"}),": Data is found in the cache and returned directly"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Cache Miss"}),": Data is not found in the cache. The application fetches it from the primary source, updates the cache, and returns the data"]}),"\n"]}),"\n"]}),"\n"]}),(0,n.jsx)(s.h3,{id:"benefits",children:"Benefits"}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Reduced database load"}),"\n",(0,n.jsx)(s.li,{children:"Faster data access (commonly retrieval from RAM)"}),"\n",(0,n.jsx)(s.li,{children:"Scalability"}),"\n",(0,n.jsx)(s.li,{children:"Cost-Effectiveness"}),"\n"]})]}),(0,n.jsx)(l.Z,{value:"operations",label:"Operations",children:(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"GET"}),": Retrieve the value of a key"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"PUT"}),": Create a new key-value pair or update an existing key"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"DELETE"}),": Delete a key-value pair"]}),"\n"]})}),(0,n.jsxs)(l.Z,{value:"key-value-mappings",label:"Key-Value Mappings",children:[(0,n.jsx)(s.h3,{id:"keys",children:"Keys"}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Unique identifier"}),"\n",(0,n.jsx)(s.li,{children:"Can be only a string"}),"\n"]}),(0,n.jsx)(s.h3,{id:"values",children:"Values"}),(0,n.jsxs)("table",{children:[(0,n.jsx)("thead",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{children:"Redis Data Structures"}),(0,n.jsx)("th",{children:"Underlying Implementation"})]})}),(0,n.jsxs)("tbody",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"String"})}),(0,n.jsx)("td",{children:"SDS (Simple Dynamic String)"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Lists"})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:["Bi-Directional LinkedList \u2192 QuickList in Redis 7 - ",(0,n.jsx)(s.code,{children:"O(n)"})]}),(0,n.jsxs)("li",{children:["ZipList \u2192 ListPack in Redis 7 - ",(0,n.jsx)(s.code,{children:"O(n)"})]})]})})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Hashes"})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:["ZipList \u2192 ListPack in Redis 7 - ",(0,n.jsx)(s.code,{children:"O(n)"})]}),(0,n.jsxs)("li",{children:["HashTable ",(0,n.jsx)(s.code,{children:"O(1)"})]})]})})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Sets"})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:["HashTable ",(0,n.jsx)(s.code,{children:"O(1)"})]}),(0,n.jsxs)("li",{children:["IntSet ",(0,n.jsx)(s.code,{children:"O(n)"})]})]})})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Sorted Sets"})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:["ZipList \u2192 ListPack in Redis 7 - ",(0,n.jsx)(s.code,{children:"O(n)"})]}),(0,n.jsxs)("li",{children:["SkipList ",(0,n.jsx)(s.code,{children:"O(log(n))"})]})]})})]})]})]})]}),(0,n.jsxs)(l.Z,{value:"persistence",label:"Persistence",children:[(0,n.jsx)(s.h3,{id:"levels",children:"Levels"}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.strong,{children:"1ns (L1 cache)"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.strong,{children:"10ns (L2 cache)"})}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"100ns (RAM access)"}),": Redis read"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"10\xb5s (send data over network)"}),": Memcached send data over 1 Gbps network"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"100\xb5s (read from SSD)"}),": RocksDB read"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"1ms (database insert)"}),": PostgreSQL insert"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"10ms (HDD disk seek)"}),": PostgreSQL read"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"100ms (packet CA \u2192 NL \u2192 CA)"}),": Remote Zoom call"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"10s (retry/refresh interval)"}),": Grafana refresh interval"]}),"\n"]}),(0,n.jsx)(s.p,{children:"Options:"}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"AOF (Append Only File)"}),": Acts like a log, continuously recording every write operation. This allows replaying them on restart to rebuild the data"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"RDB (Redis Database)"}),": Creates point-in-time snapshots of your entire dataset at regular intervals"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"No Persistence"}),": Disables data persistence entirely, suitable for caching temporary data"]}),"\n"]})]}),(0,n.jsx)(l.Z,{value:"eviction-policies",label:"Eviction Policies",children:(0,n.jsxs)("table",{children:[(0,n.jsx)("thead",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{children:"Eviction Policy"}),(0,n.jsx)("th",{children:"Description"}),(0,n.jsx)("th",{children:"Pros"}),(0,n.jsx)("th",{children:"Cons"}),(0,n.jsx)("th",{children:"Use Cases"})]})}),(0,n.jsxs)("tbody",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Least Frequently Used (LFU)"})}),(0,n.jsx)("td",{children:"Evicts the least frequently accessed items from the cache. It counts how often an item is accessed"}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Ideal for scenarios where access frequency varies widely"}),(0,n.jsx)("li",{children:"Ensures that frequently accessed items stay in the cache"})]})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Complexity in implementation due to the need for tracking access frequency"}),(0,n.jsx)("li",{children:"Can be less effective in scenarios with sudden spikes in access frequency"})]})}),(0,n.jsx)("td",{children:(0,n.jsx)("ul",{children:(0,n.jsx)("li",{children:"Caching of user profiles, session data, and user preferences"})})})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Least Recently Used (LRU)"})}),(0,n.jsx)("td",{children:"Evicts the least recently accessed items from the cache. It tracks the time of the last access for each item"}),(0,n.jsx)("td",{children:(0,n.jsx)("ul",{children:(0,n.jsx)("li",{children:"Effective in scenarios where recently accessed items are more likely to be accessed again"})})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"May not be optimal for scenarios with varying access patterns"}),(0,n.jsx)("li",{children:"Requires frequent updates to access timestamps"})]})}),(0,n.jsx)("td",{children:(0,n.jsx)("ul",{children:(0,n.jsx)("li",{children:"Web page caching, API response caching, and frequently accessed database records"})})})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Size-Based"})}),(0,n.jsx)("td",{children:"Evicts items based on the size of the cache. It ensures that the cache does not exceed a predefined size limit"}),(0,n.jsx)("td",{children:(0,n.jsx)("ul",{children:(0,n.jsx)("li",{children:"Guarantees that the cache size remains within predefined limits"})})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"May lead to eviction of useful items if not carefully tuned"}),(0,n.jsx)("li",{children:"May not consider access patterns, leading to suboptimal cache utilization"})]})}),(0,n.jsx)("td",{children:(0,n.jsx)("ul",{children:(0,n.jsx)("li",{children:"Image caching, file caching, and multimedia content caching"})})})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Time-to-Live (TTL)"})}),(0,n.jsx)("td",{children:"Evicts items based on their time since creation or last access. Items are evicted once their predefined lifespan expires"}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Provides control over the freshness of cached data"}),(0,n.jsx)("li",{children:"Useful for scenarios where data validity is time-bound"})]})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"May lead to eviction of frequently accessed but still valid items"}),(0,n.jsx)("li",{children:"Requires careful consideration of TTL values to balance between freshness and cache utilization"})]})}),(0,n.jsx)("td",{children:(0,n.jsx)("ul",{children:(0,n.jsx)("li",{children:"News articles, stock prices, and time-sensitive data feeds"})})})]})]})]})}),(0,n.jsx)(l.Z,{value:"invalidation-strategies",label:"Invalidation Strategies",children:(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Time-Based"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Absolute Timeout"}),": Cached data is invalidated after a fixed period from the time of caching"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Relative Timeout"}),": Cached data is invalidated after a fixed period from the time of last access or update"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Sliding Timeout"}),": Timeout period is extended every time the data is accessed or updated"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Event-Based Invalidation"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Publish/Subscribe Model"}),": Invalidate cache based on events published by the data source or other relevant services"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Webhooks"}),": Trigger cache invalidation based on HTTP callbacks from the data source"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Message Queue Integration"}),": Invalidate cache in response to messages received from a message queue"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Manual Invalidation"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Programmatic Invalidation"}),": Invalidate cache entries programmatically through API calls or direct cache manipulation"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Admin Console"}),": Provide a user interface for administrators to manually invalidate cache entries"]}),"\n"]}),"\n"]}),"\n"]})}),(0,n.jsx)(l.Z,{value:"redis-vs-memcached",label:"Redis vs Memcached",children:(0,n.jsxs)("table",{class:"text_vertical",children:[(0,n.jsx)("thead",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{children:"Aspect"}),(0,n.jsx)("th",{children:"Redis"}),(0,n.jsx)("th",{children:"Memcached"})]})}),(0,n.jsxs)("tbody",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Data Structure"})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"List"}),(0,n.jsx)("li",{children:"Set/Sorted Set"}),(0,n.jsx)("li",{children:"Hash"}),(0,n.jsx)("li",{children:"Bit Array"}),(0,n.jsx)("li",{children:"HyperLogLog"})]})}),(0,n.jsx)("td",{children:"Plain string value"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Architecture"})}),(0,n.jsx)("td",{children:"Single-thread for read/write keys"}),(0,n.jsx)("td",{children:"Multi-threaded"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Transactions"})}),(0,n.jsx)("td",{children:"Support atomic operations"}),(0,n.jsx)("td",{children:"-"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Snapshots/Persistence"})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Keep data on disks"}),(0,n.jsx)("li",{children:"Support RDB/AOF persistence"})]})}),(0,n.jsx)("td",{children:"-"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Pub-Sub Messaging"})}),(0,n.jsx)("td",{children:"Support Pub-Sub messaging with pattern matching"}),(0,n.jsx)("td",{children:"-"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Geo-Spatial Support"})}),(0,n.jsx)("td",{children:"Geospatial indexes that stores the longitude and latitude data of the location"}),(0,n.jsx)("td",{children:"-"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Server-Side Script"})}),(0,n.jsx)("td",{children:"Support Lua script to perform operations inside Redis"}),(0,n.jsx)("td",{children:"-"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Support Cache Eviction"})}),(0,n.jsx)("td",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"noeviction"}),(0,n.jsx)("li",{children:"allkeys-lru/allkeys-lfu/allkeys-random"}),(0,n.jsx)("li",{children:"volatile-lru/volatile-lfu/volatile-random/volatile-ttl"})]})}),(0,n.jsx)("td",{children:"LRU"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)("b",{children:"Replication"})}),(0,n.jsx)("td",{children:"Leader-Follower replication"}),(0,n.jsx)("td",{children:"-"})]})]})]})})]}),"\n",(0,n.jsx)(s.h2,{id:"security",children:"Security"}),"\n",(0,n.jsx)(r.Z,{queryString:"primary",children:(0,n.jsx)(l.Z,{value:"overview",label:"Overview",children:(0,n.jsx)(r.Z,{queryString:"secondary",children:(0,n.jsxs)(l.Z,{value:"cache-miss",label:"Cache Miss",attributes:{className:"tabs__vertical"},children:[(0,n.jsx)(s.p,{children:"Cache Miss Attack exploits weaknesses in how data is stored to steal information or overload systems. It targets situations where a web application doesn't consider all input data when storing data in a cache. This lets attackers trick the cache into revealing sensitive information or causing performance issues."}),(0,n.jsx)(s.p,{children:"Solutions:"}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Cache keys with null value. Set a short TTL (Time to Live) for keys with null value"}),"\n",(0,n.jsx)(s.li,{children:"Bloom filter to quickly check if key exists before hitting cache/database"}),"\n"]}),(0,n.jsx)(s.mermaid,{value:"  graph TB\n\n  subgraph attack [Cache Miss Attack]\n    direction LR\n\n    attack_app(Application)\n    attack_cache[[Cache]]\n    attack_db[(DB)]\n\n    attack_app --\x3e |1. read<br/>cache miss| attack_cache\n    attack_app --\x3e |2. read<br/>no data| attack_db\n\n    attack_db ~~~| hackers can overload the DB<br/>by initiating a lot of<br/>such queries| attack_db\n  end\n\n  subgraph solution1 [Cache non-existent keys]\n    direction LR\n\n    solution1_app(Application)\n    solution1_cache[[Cache]]\n    solution1_db[(DB)]\n\n    solution1_app --\x3e |1. read k3<br/>cache miss| solution1_cache\n    solution1_app --\x3e |2. read<br/>no data| solution1_db\n    solution1_app --\x3e |3. write k3=NULL| solution1_cache\n\n    solution1_db ~~~|next time the key can be found in cache and DB is not hit| solution1_db\n    solution1_cache ~~~|<table><thead><tr><th>Key</th><th>Value</th></tr></thead><tbody><tr><td>k1</td><td>1</td></tr><tr><td>k2</td><td>2</td></tr><tr><td>k3</td><td>NULL</td></tr></tbody></table>| solution1_cache\n  end\n\n  subgraph solution2 [Bloom Filter]\n    direction TB\n\n    subgraph key [key exists]\n      direction LR\n\n      key_app(Application)\n      key_cache[[Cache]]\n      key_db[(DB)]\n      key_filter{{Bloom Filter}}\n\n      key_app --\x3e |1. read k1<br/>found k1| key_filter\n      key_app --\x3e |2. read k1| key_cache\n\n      key_filter ~~~|<table><tr><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td></tr></table>| key_filter\n      key_cache ~~~|<table><thead><tr><th>Key</th><th>Value</th></tr></thead><tbody><tr><td>k1</td><td>1</td></tr><tr><td>k2</td><td>2</td></tr></tbody></table>| key_cache\n    end\n\n    subgraph noKey [key doesn't exist]\n      direction LR\n\n      noKey_cache[[Cache]]\n      noKey_app(Application)\n      noKey_db[(DB)]\n      noKey_filter{{Bloom Filter}}\n\n      noKey_app --\x3e |1. read k3<br/>not found| noKey_filter\n\n      noKey_filter ~~~|<table><tr><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td></tr></table>| noKey_filter\n      noKey_cache ~~~|<table><thead><tr><th>Key</th><th>Value</th></tr></thead><tbody><tr><td>k1</td><td>1</td></tr><tr><td>k2</td><td>2</td></tr></tbody></table>| noKey_cache\n      noKey_db ~~~|cache and DB are not hit if the key doesn't exist| noKey_db\n    end\n  end\n\n  attack --\x3e |solution| solution1 & solution2"})]})})})})]})}function j(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}}}]);