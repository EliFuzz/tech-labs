"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[6766],{3251:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>c,toc:()=>l});var s=i(86070),r=i(25710);const n={title:"Definition",description:"Definition of Data Structures",hide_table_of_contents:!0},a=void 0,c={id:"education/computer-science/data-structures/definition",title:"Definition",description:"Definition of Data Structures",source:"@site/docs/education/01-computer-science/09-data-structures/01-definition.mdx",sourceDirName:"education/01-computer-science/09-data-structures",slug:"/education/computer-science/data-structures/definition",permalink:"/tech-labs/docs/education/computer-science/data-structures/definition",draft:!1,unlisted:!1,editUrl:"https://github.com/EliFuzz/tech-labs/docs/education/01-computer-science/09-data-structures/01-definition.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Definition",description:"Definition of Data Structures",hide_table_of_contents:!0},sidebar:"education",previous:{title:"Data Structures",permalink:"/tech-labs/docs/category/data-structures"},next:{title:"Basic",permalink:"/tech-labs/docs/category/basic"}},d={},l=[{value:"Linear vs Non-Linear Data Structures",id:"linear-vs-non-linear-data-structures",level:2}];function o(e){const t={h2:"h2",img:"img",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:i(67349).A+""})}),"\n",(0,s.jsx)(t.h2,{id:"linear-vs-non-linear-data-structures",children:"Linear vs Non-Linear Data Structures"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Aspect"}),(0,s.jsx)("th",{children:"Linear Data Structures"}),(0,s.jsx)("th",{children:"Non Linear Data Structures"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Arrangement of Data"}),(0,s.jsx)("td",{children:"Data items are arranged in sequential order, one after the other"}),(0,s.jsx)("td",{children:"Data items are arranged in non-sequential order (hierarchical manner)"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Layer Presence"}),(0,s.jsx)("td",{children:"All items are present on a single layer"}),(0,s.jsx)("td",{children:"Data items are present at different layers"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Traversability"}),(0,s.jsx)("td",{children:"Can be traversed in a single run. That is, if we start from the first element, we can traverse all elements sequentially in a single pass"}),(0,s.jsx)("td",{children:"Requires multiple runs. That is, if we start from the first element, it might not be possible to traverse all elements in a single pass"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Memory Utilization"}),(0,s.jsx)("td",{children:"Is not efficient"}),(0,s.jsx)("td",{children:"Different structures utilize memory in different efficient ways depending on the need"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Time Complexity"}),(0,s.jsx)("td",{children:"Increases with data size"}),(0,s.jsx)("td",{children:"Remains the same"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Examples"}),(0,s.jsx)("td",{children:"Arrays, Stack, Queue"}),(0,s.jsx)("td",{children:"Tree, Graph, Map"})]})]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},67349:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/datastructures-1bc7fc60368047f33e10c3f5cf2c11ac.svg"}}]);