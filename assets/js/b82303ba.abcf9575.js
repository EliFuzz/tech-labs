"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[4093],{34895:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>b,contentTitle:()=>m,default:()=>v,frontMatter:()=>p,metadata:()=>g,toc:()=>x});var t=i(11527),o=i(88672),r=i(29140),l=i(52360),s=i(52296);const a="package main\n\nfunc isPowerOfTwoNaive(n int) bool {\n    if n <= 0 {\n        return false\n    }\n    for n%2 == 0 {\n        n /= 2\n    }\n    return n == 1\n}\n\nfunc isPowerOfTwoBitwise(n int) bool {\n    return n > 0 && (n&(n-1)) == 0\n}\n",c="public class Main {\n\n  public static boolean isPowerOfTwoNaive(int n) {\n    if (n <= 0) {\n      return false;\n    }\n    while (n % 2 == 0) {\n      n /= 2;\n    }\n    return n == 1;\n  }\n\n  public static boolean isPowerOfTwoBitwise(int n) {\n    return n > 0 && (n & (n - 1)) == 0;\n  }\n}\n",u="function isPowerOfTwoNaive(n) {\n  if (n <= 0) {\n    return false;\n  }\n  while (n % 2 === 0) {\n    n /= 2;\n  }\n  return n === 1;\n}\n\nfunction isPowerOfTwoBitwise(n) {\n  return n > 0 && (n & (n - 1)) === 0;\n}\n",d="fun isPowerOfTwoNaive(n: Int): Boolean {\n    var num = n\n    if (num <= 0)\n        return false\n    while (num % 2 == 0) {\n        num /= 2\n    }\n    return num == 1\n}\n\nfun isPowerOfTwoBitwise(n: Int): Boolean {\n    return n > 0 && (n and (n - 1)) == 0\n}\n",h="def is_power_of_two_naive(n):\n    if n <= 0:\n        return False\n    while n % 2 == 0:\n        n //= 2\n    return n == 1\n\ndef is_power_of_two_bitwise(n):\n    return n > 0 and (n & (n - 1)) == 0\n",f="fn is_power_of_two_naive(mut n: i32) -> bool {\n    if n <= 0 {\n        return false;\n    }\n    while n % 2 == 0 {\n        n /= 2;\n    }\n    n == 1\n}\n\nfn is_power_of_two_bitwise(n: i32) -> bool {\n    n > 0 && (n & (n - 1)) == 0\n}\n",w="function isPowerOfTwoNaive(n: number): boolean {\n  if (n <= 0) return false;\n  while (n % 2 === 0) {\n    n /= 2;\n  }\n  return n === 1;\n}\n\nfunction isPowerOfTwoBitwise(n: number): boolean {\n  return n > 0 && (n & (n - 1)) === 0;\n}\n",p={title:"Is Power of Two",description:"Is Power of Two",hide_table_of_contents:!0},m=void 0,g={id:"education/computer-science/algorithms/algo/is-power-of-two",title:"Is Power of Two",description:"Is Power of Two",source:"@site/docs/education/01-computer-science/10-algorithms/03-algo/is-power-of-two.mdx",sourceDirName:"education/01-computer-science/10-algorithms/03-algo",slug:"/education/computer-science/algorithms/algo/is-power-of-two",permalink:"/tech-labs/docs/education/computer-science/algorithms/algo/is-power-of-two",draft:!1,unlisted:!1,editUrl:"https://github.com/EliFuzz/tech-labs/docs/education/01-computer-science/10-algorithms/03-algo/is-power-of-two.mdx",tags:[],version:"current",frontMatter:{title:"Is Power of Two",description:"Is Power of Two",hide_table_of_contents:!0},sidebar:"education",previous:{title:"Interpolation Search",permalink:"/tech-labs/docs/education/computer-science/algorithms/algo/interpolation-search"},next:{title:"Jump Game",permalink:"/tech-labs/docs/education/computer-science/algorithms/algo/jump-game"}},b={},x=[{value:"Definition",id:"definition",level:2},{value:"Practice",id:"practice",level:2}];function j(n){const e={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsxs)(r.Z,{children:[(0,t.jsx)(l.Z,{value:"definition",label:"Definition",children:(0,t.jsx)(e.p,{children:"The Power of Two Algorithm determines whether a given integer is a power of two. It leverages bitwise operations for efficiency and simplicity"})}),(0,t.jsx)(l.Z,{value:"how",label:"Explanation",children:(0,t.jsx)(e.p,{children:"Performing a bitwise AND operation between the integer and its decrement (integer - 1). If the result is zero, the integer is a power of two"})}),(0,t.jsx)(l.Z,{value:"guidance",label:"Guidance",children:(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Check if the given integer is less than or equal to ",(0,t.jsx)(e.code,{children:"0"})]}),"\n",(0,t.jsxs)(e.li,{children:["Perform a bitwise ",(0,t.jsx)(e.code,{children:"AND"})," operation between the integer and its decrement (",(0,t.jsx)(e.code,{children:"integer - 1"}),")"]}),"\n",(0,t.jsxs)(e.li,{children:["If the result is ",(0,t.jsx)(e.code,{children:"0"}),", return ",(0,t.jsx)(e.code,{children:"true"})]}),"\n",(0,t.jsx)(e.li,{children:"Otherwise, return false"}),"\n"]})}),(0,t.jsx)(l.Z,{value:"tips",label:"Tips",children:(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"utilize bitwise operations for efficient manipulation of bits"}),"\n",(0,t.jsx)(e.li,{children:"avoid iterative approaches; the algorithm can be solved in constant time"}),"\n"]})})]}),"\n",(0,t.jsx)(e.h2,{id:"practice",children:"Practice"}),"\n",(0,t.jsxs)(r.Z,{children:[(0,t.jsx)(l.Z,{value:"practice",label:"Practice",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"isPowerOfTwo(x):\n  if x <= 0:\n    return false\n  return (x & (x - 1)) == 0\n"})})}),(0,t.jsx)(l.Z,{value:"solution",label:"Solution",children:(0,t.jsxs)(r.Z,{queryString:"code",children:[(0,t.jsx)(l.Z,{value:"go",label:"",attributes:{title:"Go Lang",className:"code_lang go m"},children:(0,t.jsx)(s.Z,{language:"go",children:a})}),(0,t.jsx)(l.Z,{value:"java",label:"",attributes:{title:"Java",className:"code_lang java m"},children:(0,t.jsx)(s.Z,{language:"java",children:c})}),(0,t.jsx)(l.Z,{value:"js",label:"",attributes:{title:"JavaScript",className:"code_lang js m"},children:(0,t.jsx)(s.Z,{language:"js",children:u})}),(0,t.jsx)(l.Z,{value:"kotlin",label:"",attributes:{title:"Kotlin",className:"code_lang kotlin m"},children:(0,t.jsx)(s.Z,{language:"kotlin",children:d})}),(0,t.jsx)(l.Z,{value:"python",label:"",attributes:{title:"Python",className:"code_lang python m"},children:(0,t.jsx)(s.Z,{language:"python",children:h})}),(0,t.jsx)(l.Z,{value:"rust",label:"",attributes:{title:"Rust",className:"code_lang rust m"},children:(0,t.jsx)(s.Z,{language:"rust",children:f})}),(0,t.jsx)(l.Z,{value:"ts",label:"",attributes:{title:"TypeScript",className:"code_lang ts m"},children:(0,t.jsx)(s.Z,{language:"ts",children:w})})]})})]})]})}function v(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(j,{...n})}):j(n)}}}]);