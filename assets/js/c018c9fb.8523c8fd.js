"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[1073],{12378:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"education/tech-stack/backend/jvm/spring-boot","title":"Spring Boot","description":"Spring Boot Overview","source":"@site/docs/education/02-tech-stack/03-backend/02-jvm/02-spring-boot.mdx","sourceDirName":"education/02-tech-stack/03-backend/02-jvm","slug":"/education/tech-stack/backend/jvm/spring-boot","permalink":"/tech-labs/docs/education/tech-stack/backend/jvm/spring-boot","draft":false,"unlisted":false,"editUrl":"https://github.com/EliFuzz/tech-labs/docs/education/02-tech-stack/03-backend/02-jvm/02-spring-boot.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Spring Boot","description":"Spring Boot Overview","hide_table_of_contents":true},"sidebar":"education","previous":{"title":"Java","permalink":"/tech-labs/docs/education/tech-stack/backend/jvm/java"},"next":{"title":"Software Development","permalink":"/tech-labs/docs/category/software-development"}}');var r=i(23420),t=i(38906),a=i(31519),o=i(20007);const l={title:"Spring Boot",description:"Spring Boot Overview",hide_table_of_contents:!0},d=void 0,c={},h=[];function p(e){const n={code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(a.A,{queryString:"primary",children:[(0,r.jsx)(o.A,{value:"fundamentals",label:"Fundamentals",children:(0,r.jsxs)(a.A,{queryString:"secondary",children:[(0,r.jsx)(o.A,{value:"definition",label:"Definition",attributes:{className:"tabs__vertical"},children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Spring Boot"})," is a open-source framework built on top of the Spring platform. Its primary goal is to simplify the development of Java applications, particularly microservices, by providing autoconfiguration and reducing boilerplate code"]})}),(0,r.jsx)(o.A,{value:"core-modules",label:"Modules",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Core Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Core"}),": Central module providing the basic functionalities and configuration for Spring Boot applications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Autoconfigure"}),": Automatically configures Spring and 3rd-party libraries based on classpath contents, other beans, and various property settings"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Web Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Web"}),": Provides support for building web applications using Spring MVC"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Webflux"}),": Provides support for reactive programming with Spring WebFlux, allowing you to build non-blocking, event-driven applications"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data JPA"}),": Provides support for Java Persistence API (JPA) to interact with relational databases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data MongoDB"}),": Offers support for MongoDB, allowing you to work with NoSQL databases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Redis"}),": Provides integration with Redis, a powerful in-memory data structure store"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data JDBC"}),": Simplifies working with JDBC-based data access and relational databases without using JPA"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security"}),": Provides security features for Spring Boot applications, including authentication, authorization, and encryption"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"OAuth2"}),": Offers support for implementing OAuth 2.0 authentication and authorization mechanisms"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Messaging Modules"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AMQP"}),": Provides support for messaging with RabbitMQ using the Advanced Message Queuing Protocol (AMQP)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Kafka"}),": Offers support for messaging with Apache Kafka, a distributed streaming platform"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test"}),": Offers testing support for Spring Boot applications, including unit, integration, and end-to-end testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test Starter"}),": Includes dependencies for testing, such as JUnit, Mockito, and Spring Test"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cloud Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spring Cloud Config"}),": Provides centralized external configuration management for distributed systems"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spring Cloud Netflix"}),": Integrates Spring applications with Netflix OSS components, such as Eureka for service discovery, Ribbon for client-side load balancing, Hystrix for circuit breaking, and Zuul for API gateway"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spring Cloud Stream"}),": Offers support for building event-driven microservices with Spring Integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spring Cloud Function"}),": Provides a programming model and runtime support for serverless functions in Spring Boot applications"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitoring and Management Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Actuator"}),": Provides features for monitoring and managing Spring Boot applications, including health checks, metrics, and environment details"]}),"\n"]}),"\n"]}),"\n"]})})]})}),(0,r.jsx)(o.A,{value:"spring-boot-optimization",label:"Optimization",children:(0,r.jsxs)("table",{class:"text_vertical",children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Aspect"}),(0,r.jsx)("th",{children:"Definition"}),(0,r.jsx)("th",{children:"Benefits"}),(0,r.jsx)("th",{children:"Example"})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"Lazy Bean Initialization"})}),(0,r.jsx)("td",{children:"Load bean only when needed"}),(0,r.jsx)("td",{children:"Reduces memory footprint"}),(0,r.jsx)("td",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Load bean when it is needed, ideal for optional features\n@Lazy @Bean\n\n// Load bean only if a given bean is missing\n@Bean @ConditionalOnMissingBean\n\n// Load bean based on app config, ideal for optional features\n@Configuration @ConditionalOnProperty(name = "feature.enabled", havingValue = "true")\n\n// Load bean based on classpath, for scenarios where certain classes are expected to be present\n@Configuration @ConditionalOnClass(name = "com.example.SomeClass")\n\n// Load bean based on classpath, for scenarios where certain classes are missing\n@Configuration @ConditionalOnMissingClass(name = "com.example.SomeExcludedClass")\n'})})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"Minimize Auto-Configuration"})}),(0,r.jsx)("td",{children:"Disable unnecessary auto-configurations"}),(0,r.jsx)("td",{children:"Reduces startup time"}),(0,r.jsx)("td",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"spring:\n    autoconfigure:\n        exclude: org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration\n"})})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"Dependencies"})}),(0,r.jsx)("td",{children:"Include only essential dependencies"}),(0,r.jsx)("td",{children:"Reduces startup time and application size"}),(0,r.jsx)("td",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// use maven-dependency-plugin to analyze dependencies\nmvn dependency:analyze\n\n// use maven-enforcer-plugin to enforce dependencies\nmvn enforcer:enforce\n\n// use maven-dependency-plugin to exclude dependencies\nmvn dependency:tree -DexcludeTransitive=true\n\n// check dependencies versions\nmvn versions:display-dependency-updates\n\n// check plugins versions\nmvn versions:display-version-updates\n"})})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"Classpath Scanning"})}),(0,r.jsx)("td",{children:"Limit classpath scanning to only necessary packages"}),(0,r.jsx)("td",{children:"Reduces startup time"}),(0,r.jsx)("td",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@SpringBootApplication(scanBasePackages = "com.example")\n'})})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"Garbage Collection Tuning"})}),(0,r.jsx)("td",{children:"Enable garbage collection"}),(0,r.jsx)("td",{children:"Reduce memory usage and improves performance"}),(0,r.jsx)("td",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"// Garbage-First (G1) Collector\n-XX:+UseG1GC\n\n// Set min and max heap size equal for stable heap usage during runtime\n-Xms=2G -Xmx=2G\n\n// Set max pause time for garbage collection based on the project performance\n-XX:MaxGCPauseMillis=500\n\n// Disable explicit GC calls\n-XX:+DisableExplicitGC\n\n// Enable string deduplication to reduce memory usage\n-XX:+UseStringDeduplication\n\n// Enable parallel GC for faster garbage collection\n-XX:+ParallelRefProcEnabled\n\n// Set max size for class metadata\n-XX:MaxMetaspaceSize=256M\n\n// Set max tenuring threshold based on the project performance\n-XX:MaxTenuringThreshold=15\n\n// Set number of threads for garbage collection\n-XX:ConcGCThreads=2\n\n// Set initial heap occupancy\n-XX:InitiatingHeapOccupancyPercent=25\n"})})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"HTTP Compression"})}),(0,r.jsx)("td",{children:"Enable HTTP compression"}),(0,r.jsx)("td",{children:"Reduces network traffic"}),(0,r.jsx)("td",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# based on the project specification lz4 or other compression algorithm can be used\nspring:\n  http:\n    gzip:\n      enabled: true\n      mime-types: application/json\n      min-gzip-size: 1024\n      deflate-compression-level: 6\n"})})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"JVM Version"})}),(0,r.jsx)("td",{children:"Use a compatible latest JVM for best performance"}),(0,r.jsx)("td",{children:"Improves overall performance"}),(0,r.jsx)("td",{})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"GraalVM Native Image"})}),(0,r.jsxs)("td",{children:[(0,r.jsx)(n.p,{children:"Scale Zero (low memory footprint and fast startup time).\nWith tradeoffs:"}),(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Slow compilation"}),(0,r.jsx)("li",{children:"Additional metadata required for reflection, proxies, and resources"}),(0,r.jsx)("li",{children:"Closed world assumptions. Bean conditions fixed at build time. No dynamic class loading"})]})]}),(0,r.jsx)("td",{children:"Improves startup time and application size"}),(0,r.jsx)("td",{})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"Virtual Threads (JDK 21+)"})}),(0,r.jsx)("td",{children:"Reduces the cost of server applications written in thread-per-request style to scale with near-optimal hardware utilization"}),(0,r.jsx)("td",{children:"Reduces memory footprint and improves performance"}),(0,r.jsx)("td",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'var thread = Thread.ofVirtual().start(() -> System.out.println("Hello"));\n'})})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"JIB"})}),(0,r.jsx)("td",{children:"JIB (Java Image Builder) is a build tool for containerization that produces highly optimized build images"}),(0,r.jsx)("td",{children:"Reduces startup time, application size, and overall performance"}),(0,r.jsx)("td",{})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"JVM Memory Management"})}),(0,r.jsx)("td",{children:"Use JVM Memory Calculator to estimate memory usage"}),(0,r.jsx)("td",{children:"Reduces memory footprint"}),(0,r.jsx)("td",{})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"Compiler Optimization"})}),(0,r.jsx)("td",{children:"Enhances performance by using multiple levels of compilation"}),(0,r.jsx)("td",{children:"Reduces build time"}),(0,r.jsx)("td",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"// Enhances performance by using multiple levels of compilation\nJAVA_OPTS: -XX:+TieredCompilation\n\n// Limits compilation to the first tier, balancing performance and compilation time\nJAVA_OPTS: -XX:TieredStopAtLevel=1\n\n// Compile with multiple threads (1C is 1 thread per CPU core)\nmvn -T 1C clean install\n"})})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"Threads Memory Management"})}),(0,r.jsx)("td",{children:"Control memory allocation per thread"}),(0,r.jsx)("td",{children:"Reduces memory footprint and improves performance"}),(0,r.jsx)("td",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"// Control memory allocation per thread\nJAVA_OPTS: -Xss256k\n"})})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"Connection Pooling"})}),(0,r.jsx)("td",{children:"Connection pooling reduces network traffic"}),(0,r.jsx)("td",{children:"Improves performance and reduces initial database connection time"}),(0,r.jsx)("td",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"spring:\n    datasource:\n        type: com.zaxxer.hikari.HikariDataSource\n    hikari:\n        maximum-pool-size: 10\n        minimum-idle: 5\n        idle-timeout: 30000\n        connection-test-query: SELECT 1\n"})})})]})]})]})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);